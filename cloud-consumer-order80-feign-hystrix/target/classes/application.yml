server:
  port: 800

spring:
  application:
    name: cloud-order-hystrix

eureka:
  client:
    register-with-eureka: true
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:7001/eureka
      #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  #集群版

feign:
  ### Hystrix 配置
  hystrix:
    enabled: true #如果处理自身的容错就开启。开启方式与生产端不一样。

#由于底层使用的是ribbon,所有也要注意ribbon的超时时间
ribbon: #根
  ReadTimeout:  5000
  ConnectTimeout: 5000

logging:
  level:
    com.lxfly.springcloud.client.PaymentHystrixClient: debug

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
#三、Feign请求超时问题
#Hystrix默认的超时时间是1秒，如果超过这个时间尚未响应，将会进入fallback代码。而首次请求往往会比较慢（因为Spring的懒加载机制，要实例化一些类），这个响应时间可能就大于1秒了
#解决方案有三种，以feign为例。
#方法一
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
#该配置是让Hystrix的超时时间改为5秒
#方法二
#hystrix.command.default.execution.timeout.enabled: false
#该配置，用于禁用Hystrix的超时时间
#方法三
#feign.hystrix.enabled: false
#该配置，用于索性禁用feign的hystrix。该做法除非一些特殊场景，不推荐使用。
